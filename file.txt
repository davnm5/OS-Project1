
A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.are nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controller
Storage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, that
1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.

A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.are nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controller
Storage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, that
1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit
A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.are nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controller
Storage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, that
1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit
A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.are nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controller
Storage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, that
1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit
A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.are nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controller
Storage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, that
1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit
A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.are nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controller
Storage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, that
1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit
A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.are nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controller
Storage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, that
1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit
A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.are nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controller
Storage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, that
1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit
A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.are nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controller
Storage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, that
1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit
A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.are nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controller
Storage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, that
1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit
A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.are nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controller
Storage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, that
1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit
A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.are nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controller
Storage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, that
1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit
A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.are nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controller
Storage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, that
1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit
A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.are nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controller
Storage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, that
1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit
A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.are nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controller
Storage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, that
1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit
A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.are nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controller
Storage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, that
1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit
A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.A bit is the basic unit of computer storage. It can contain one of two values,
zero and one. All other storage in a computer is based on collections of bits.
Given enough bits, it is amazing howmany things a computer can represent:
numbers, letters, images, movies, sounds, documents, and programs, to name
a few. A byte is 8 bits, and on most computers it is the smallest convenient
chunk of storage. For example, most computers don’t have an instruction
to move a bit but do have one to move a byte. A less common term is
word,which is a given computer architecture’s native storage unit. Aword is
generally made up of one or more bytes. For example, a computer may have
instructions to move 64-bit (8-byte) words.
A kilobyte, or KB, is 1,024 bytes; a megabyte, or MB, is 1,0242 bytes; and
a gigabyte, or GB, is 1,0243 bytes. Computer manufacturers often round off
these numbers and say that a megabyte is 1 million bytes and a gigabyte is 1
billion bytes.are nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controllerare nonvolatile. An electronic disk can be designed to be either volatile or
nonvolatile. During normal operation, the electronic disk stores data in a
large DRAM array, which is volatile. But many electronic-disk devices contain
a hidden magnetic hard disk and a battery for backup power. If external
power is interrupted, the electronic-disk controller copies the data from RAM
to the magnetic disk. When external power is restored, the controller copies
the data back into RAM. Another form of electronic disk is flash memory,
which is popular in cameras and personal digital assistants (PDAs), in robots,
and increasingly as removable storage on general-purpose computers. Flash
memoryis slower thanDRAMbut needs no power to retain its contents. Another
form of nonvolatile storage is NVRAM, which is DRAM with battery backup
power. This memory can be as fast as DRAM and (as long as the battery lasts)
is nonvolatile.
The design of a complete memory system must balance all the factors just
discussed: it must use only as much expensive memory as necessary while
providing as much inexpensive, nonvolatile memory as possible. Caches can
be installed to improve performance where a large access-time or transfer-rate
disparity exists between two components.
1.2.3 I/O Structure
Storage is only one of many types of I/O devices within a computer. A large
portion of operating-system code is dedicated to managing I/O, both because
of its importance to the reliability and performance of a system and because of
the varying nature of the devices. Next, we provide an overview of I/O.
A general-purpose computer system consists of CPUs and multiple device
controllers that are connected through a common bus. Each device controller
Storage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, thatStorage Management
To make the computer system convenient for users, the operating system
provides a uniform, logical view of information storage. The operating system
abstracts from the physical properties of its storage devices to define a logical
storage unit, the file. The operating system maps files onto physical media and
accesses these files via the storage devices.
1.8.1 File-System Management
File management is one of the most visible components of an operating system.
Computers can store information on several different types of physical media.
Magnetic disk, optical disk, and magnetic tape are the most common. Each
of these media has its own characteristics and physical organization. Each
medium is controlled by a device, such as a disk drive or tape drive, that
1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit1.11.3 Handheld Systems
Handheld systems include personal digital assistants (PDAs), such as Palm
and Pocket-PCs, and cellular telephones, many of which use special-purpose
embedded operating systems. Developers of handheld systems and applications
face many challenges, most of which are due to the limited size of such
devices. For example, a PDA is typically about 5 inches in height and 3 inches
in width, and it weighs less than one-half pound. Because of their size, most
handheld devices have small amounts of memory, slow processors, and small
display screens.We take a look now at each of these limitations.
The amount of physicalmemory in a handheld depends on the device, but
typically it is somewhere between 1 MB and 1 GB. (Contrast this with a typical
PC or workstation, which may have several gigabytes of memory.) As a result,
the operating system and applications must manage memory efficiently. This
includes returning all allocated memory to the memory manager when the
memory is not being used. In Chapter 8, we explore virtual memory, which
allows developers to write programs that behave as if the system has more
memory than is physically available. Currently, not many handheld devices
use virtual-memory techniques, so program developers must work within the
confines of limited physical memory.
A second issue of concern to developers of handheld devices is the speed
of the processor used in the devices. Processors for most handheld devices
run at a fraction of the speed of a processor in a PC. Faster processors require
more power. To include a faster processor in a handheld device would require
a larger battery, which would take up more space and would have to be
replaced (or recharged) more frequently. Most handheld devices use smaller,
slower processors that consume less power. Therefore, the operating system
and applications must be designed not to tax the processor.
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit
The last issue confronting program designers for handheld devices is I/O.
A lack of physical space limits input methods to small keyboards, handwriting
recognition, or small screen-based keyboards. The small display screens limit